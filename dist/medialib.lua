medialib={}medialib.DISTRIBUTABLE=true;medialib.Modules={}medialib.DEBUG=false;function medialib.modulePlaceholder(a)medialib.Modules[a]={}end;function medialib.module(a,b)if medialib.DEBUG then print("[MediaLib] Creating module "..a)end;local c=medialib.Modules[a]or{name=a,options=b}medialib.Modules[a]=c;return c end;if SERVER then for d,e in pairs(file.Find("medialib/*","LUA"))do AddCSLuaFile("medialib/"..e)end end;function medialib.load(a)local c=medialib.Modules[a]if c then return c end;if medialib.DEBUG then print("[MediaLib] Loading unreferenced module "..a)end;local file="medialib/"..a..".lua"include(file)return medialib.Modules[a]end;local f={read=function(g)return file.Read(g.lua_path,"LUA")end,load=function(g)include(g.lua_path)end,addcs=function(g)AddCSLuaFile(g.lua_path)end}f.__index=f;local h={read=function(g)return g.source end,load=function(g)RunString(g.source)end,addcs=function()end}h.__index=h;medialib.FolderItems={}function medialib.folderIterator(i)local j={}for d,e in pairs(file.Find("medialib/"..i.."/*.lua","LUA"))do table.insert(j,setmetatable({name=e,lua_path="medialib/"..i.."/"..e},f))end;for k,l in pairs(medialib.FolderItems)do local m=k:match("^([^/]*).+")if m==i then table.insert(j,setmetatable({name=k:match("^[^/]*/(.+)"),source=l},h))end end;return pairs(j)end;if CLIENT then local function n()for o=1,30 do MsgC(HSVToColor(30*o,0.5,0.9)," "..string.rep("SEE BELOW FOR INSTRUCTIONS  ",3).."\n")end end;concommand.Add("medialib_noflash",function(d,d,p)if p[1]=="rainbow"then n()end;SetClipboardText("http://get.adobe.com/flashplayer/otherversions/")MsgN("[ MediaLib: How to get Flash Player ]")MsgN("1. Open this website in your browser (not the ingame Steam browser): http://get.adobe.com/flashplayer/otherversions/")MsgN("   (the link has been automatically copied to your clipboard)")MsgN("2. Download and install the NSAPI (for Firefox) version")MsgN("3. Restart your Garry's Mod and rejoin this server")MsgN("[ ======================= ]")end)concommand.Add("medialib_lowaudio",function(d,d,p)if p[1]=="rainbow"then n()end;SetClipboardText("http://windows.microsoft.com/en-us/windows7/adjust-the-sound-level-on-your-computer")MsgN("[ MediaLib: How to fix muted sound ]")MsgN("1. Follow instructions here: http://windows.microsoft.com/en-us/windows7/adjust-the-sound-level-on-your-computer")MsgN("   (the link has been automatically copied to your clipboard, you can open it in the steam ingame browser)")MsgN("2. Increase the volume of a process called 'Awesomium Core'")MsgN("3. You should immediately start hearing sound if a mediaclip is playing")MsgN("[ ======================= ]")end)hook.Add("OnPlayerChat","MediaLib.ShowInstructions",function(q,r)if r:match("!ml_noflash")then RunConsoleCommand("medialib_noflash","rainbow")RunConsoleCommand("showconsole")elseif r:match("!ml_lowvolume")then RunConsoleCommand("medialib_lowaudio","rainbow")RunConsoleCommand("showconsole")end end)end
-- 'oop'; CodeLen/MinifiedLen 2927/1542; Dependencies []
medialib.modulePlaceholder("oop")
do
local a=medialib.module("oop")a.Classes=a.Classes or{}function a.class(b,c)local d=a.Classes[b]if not d then d=a.createClass(b,c)a.Classes[b]=d;if medialib.DEBUG then print("[MediaLib] Registering oopclass "..b)end end;return d end;function a.resolveClass(e)if e==nil then return a.Object end;local f=type(e)if f=="string"then local g=a.Classes[e]if g then return g end;error("Resolving class from inexistent class string '"..tostring(e).."'")end;if f=="table"then return e end;error("Resolving class from invalid object '"..tostring(e).."'")end;local h={}local i={'__add','__call','__concat','__div','__ipairs','__le','__len','__lt','__mod','__mul','__pairs','__pow','__sub','__tostring','__unm'}function a.createClass(b,c)local d={}local j;if c~=h then j=a.resolveClass(c)end;d.name=b;d.super=j;d.members=setmetatable({},{__index=d.super})d.members.class=d;d.members.super=d.super;local k={}do k.__index=d.members;for l,b in pairs(i)do k[b]=function(...)local m=d.members[b]if m then return m(...)end end end end;local n={}do n.__index=d.members;n.__newindex=d.members;n.__tostring=function(o)return"class "..o.name end;function n:__call(...)local p={}setmetatable(p,k)local q=p.initialize;if q then q(p,...)end;return p end end;setmetatable(d,n)return d end;a.Object=a.createClass("Object",h)function a.Object:hashCode()local r=getmetatable(o)local s=r.__tostring;r.__tostring=nil;local t=tostring(o):match("table: 0x(.*)")r.__tostring=s;return t end;function a.Object:__tostring()return string.format("%s@%s",o.class.name,o:hashCode())end
end
-- 'mediabase'; CodeLen/MinifiedLen 3470/1422; Dependencies [oop]
medialib.modulePlaceholder("mediabase")
do
local a=medialib.load("oop")local b=a.class("Media")function b:on(c,d)e._events=e._events or{}e._events[c]=e._events[c]or{}e._events[c][d]=true end;function b:emit(c,...)if not e._events then return end;local f=e._events[c]if not f then return end;for g,h in pairs(f)do g(...)end end;function b:getServiceBase()error("Media:getServiceBase() not implemented!")end;function b:getService()return e._service end;function b:getUrl()return e._unresolvedUrl end;function b:lookupMetadata()local i=e._metadata;if type(i)=="table"then return i end;if i==true or type(i)=="string"then return nil end;e._metadata=true;e:getService():query(e:getUrl(),function(j,k)if j then e._metadata=j else e._metadata=k end end)return nil end;function b:isValid()return false end;function b:IsValid()return e:isValid()end;function b:setVolume(l)end;function b:getVolume()end;function b:setQuality(m)end;function b:seek(n)end;function b:getTime()return 0 end;function b:sync(n,o)if e._lastSync and e._lastSync>CurTime()-5 then return end;local p=e:shouldSync(n,o)if not p then return end;e:seek(n+0.1)e._lastSync=CurTime()end;function b:shouldSync(n,o)if not e:isValid()or not e:isPlaying()then return false end;o=o or 2;local q=e:getTime()local r=math.abs(q-n)return r>o end;function b:getState()end;function b:isPlaying()return e:getState()=="playing"end;function b:play()end;function b:pause()end;function b:stop()end;function b:draw(s,t,u,v)end
end
-- 'servicebase'; CodeLen/MinifiedLen 435/287; Dependencies [oop]
medialib.modulePlaceholder("servicebase")
do
local a=medialib.load("oop")local b=a.class("Service")function b:on(c,d)e._events={}e._events[c]=e._events[c]or{}e._events[c][d]=true end;function b:emit(c,...)for f,g in pairs(e._events[c]or{})do f(...)end end;function b:load(h,i)end;function b:isValidUrl(h)end;function b:query(h,d)end
end
-- 'timekeeper'; CodeLen/MinifiedLen 1016/638; Dependencies [oop]
medialib.modulePlaceholder("timekeeper")
do
local a=medialib.load("oop")local b=a.class("TimeKeeper")function b:initialize()c:reset()end;function b:reset()c.cachedTime=0;c.running=false;c.runningTimeStart=0 end;function b:getTime()local d=c.cachedTime;if c.running then d=d+RealTime()-c.runningTimeStart end;return d end;function b:isRunning()return c.running end;function b:play()if c.running then return end;c.runningTimeStart=RealTime()c.running=true end;function b:pause()if not c.running then return end;local e=RealTime()-c.runningTimeStart;c.cachedTime=c.cachedTime+e;c.running=false end;function b:seek(d)c.cachedTime=d;if c.running then c.runningTimeStart=RealTime()end end
end
-- 'service_html'; CodeLen/MinifiedLen 5822/3692; Dependencies [oop,timekeeper,volume3d]
medialib.modulePlaceholder("service_html")
do
local a=medialib.load("oop")medialib.load("timekeeper")local b=medialib.load("volume3d")local c=a.class("HTMLService","Service")function c:load(d,e)local f=a.class("HTMLMedia")()f._unresolvedUrl=d;f._service=g;g:resolveUrl(d,function(h,i)f:openUrl(h)if e and e.use3D then b.startThink(f,{pos=e.pos3D,ent=e.ent3D,fadeMax=e.fadeMax3D})end;if i and i.start and not e or not e.dontSeek then f:seek(i.start)end end)return f end;function c:resolveUrl(d,j)j(d,g:parseUrl(d))end;function c:hasReliablePlaybackEvents(f)return false end;local k={instances={}}concommand.Add("medialib_awepoolinfo",function()print("AwesomiumPool> Free instance count: "..#k.instances)end)timer.Create("MediaLib.AwesomiumPoolCleaner",30,0,function()if#k.instances<3 then return end;local l=table.remove(k.instances,1)if IsValid(l)then l:Remove()end end)function k.get()local l=table.remove(k.instances,1)if not IsValid(l)then local m=vgui.Create("DHTML")return m end;return l end;function k.free(l)if not IsValid(l)then return end;l:SetHTML("")table.insert(k.instances,l)end;local n=a.class("HTMLMedia","Media")local o,p=1280,720;function n:initialize()g.timeKeeper=a.class("TimeKeeper")()g.panel=k.get()local m=g.panel;m:SetPos(0,0)m:SetSize(o,p)local q="MediaLib.HTMLMedia.FakeThink-"..g:hashCode()hook.Add("Think",q,function()if not IsValid(g.panel)then hook.Remove("Think",q)return end;g.panel:Think()end)local r=m._OldCM or m.ConsoleMessage;m._OldCM=r;m.ConsoleMessage=function(s,t)if string.find(t,"XMLHttpRequest")then return end;if string.find(t,"Unsafe JavaScript attempt to access")then return end;return r(s,t)end;m:SetPaintedManually(true)m:SetVisible(false)m:AddFunction("medialiblua","Event",function(u,v)g:handleHTMLEvent(u,util.JSONToTable(v))end)end;function n:getBaseService()return"html"end;function n:openUrl(d)g.panel:OpenURL(d)g.URLChanged=CurTime()end;function n:runJS(w,...)local x=string.format(w,...)g.panel:QueueJavascript(x)end;function n:handleHTMLEvent(u,y)if u=="stateChange"then local z=y.state;local A;if y.time then g.timeKeeper:seek(y.time)end;if z=="playing"then A="playing"g.timeKeeper:play()elseif z=="ended"or z=="paused"or z=="buffering"then A=z;g.timeKeeper:pause()end;if A then g.state=A;g:emit(A)end end end;function n:getState()return g.state end;function n:updateTexture()if g.lastUpdatedFrame~=FrameNumber()then g.panel:UpdateHTMLTexture()g.lastUpdatedFrame=FrameNumber()end end;function n:draw(B,C,D,E)g:updateTexture()local F=g.panel:GetHTMLMaterial()surface.SetMaterial(F)surface.SetDrawColor(255,255,255)local G,H=o/F:Width(),p/F:Height()surface.DrawTexturedRectUV(B or 0,C or 0,D or o,E or p,0,0,G,H)end;function n:getTime()return g.timeKeeper:getTime()end;function n:setQuality(I)if g.lastSetQuality and g.lastSetQuality==I then return end;g.lastSetQuality=I;g:runJS("medialibDelegate.run('setQuality', {quality: %q})",I)end;function n:applyVolume()local J=g.internalVolume or 1;local K=g.volume or 1;local L=J*K;if g.lastSetVolume and g.lastSetVolume==L then return end;g.lastSetVolume=L;g:runJS("medialibDelegate.run('setVolume', {vol: %f})",L)end;function n:setVolume(L)g.volume=L;g:applyVolume()end;function n:seek(M)g:runJS("medialibDelegate.run('seek', {time: %d})",M)end;function n:hasReliablePlaybackEvents()local N=g:getService()return N and N:hasReliablePlaybackEvents(g)end;function n:play()if not g:hasReliablePlaybackEvents()then g.timeKeeper:play()end;g:runJS("medialibDelegate.run('play')")end;function n:pause()if not g:hasReliablePlaybackEvents()then g.timeKeeper:pause()end;g:runJS("medialibDelegate.run('pause')")end;function n:stop()k.free(g.panel)g.panel=nil;g.timeKeeper:pause()g:emit("destroyed")end;function n:isValid()return IsValid(g.panel)end
end
-- 'service_bass'; CodeLen/MinifiedLen 3854/2570; Dependencies [oop,volume3d]
medialib.modulePlaceholder("service_bass")
do
local a=medialib.load("oop")local b=medialib.load("volume3d")local c=a.class("BASSService","Service")function c:load(d,e)local f=a.class("BASSMedia")()f._unresolvedUrl=d;f._service=g;g:resolveUrl(d,function(h,i)if e and e.use3D then f.is3D=true;f:runCommand(function(j)b.startThink(f,{pos=e.pos3D,ent=e.ent3D,fadeMax=e.fadeMax3D})end)end;f:openUrl(h)if i and i.start and not e or not e.dontSeek then f:seek(i.start)end end)return f end;function c:resolveUrl(d,k)k(d,g:parseUrl(d))end;local l=a.class("BASSMedia","Media")function l:initialize()g.commandQueue={}end;function l:getBaseService()return"bass"end;function l:updateFFT()local m=FrameNumber()if g._lastFFTUpdate and g._lastFFTUpdate==m then return end;g._lastFFTUpdate=m;local j=g.chan;if not IsValid(j)then return end;g.fftValues=g.fftValues or{}j:FFT(g.fftValues,FFT_512)end;function l:getFFT()return g.fftValues end;function l:draw(n,o,p,q)surface.SetDrawColor(0,0,0)surface.DrawRect(n,o,p,q)g:updateFFT()local r=g:getFFT()if not r then return end;local s=#r;local t=s==0 and 1 or p/s;local u=p/s;for v=1,s do surface.SetDrawColor(HSVToColor(v,0.9,0.5))local w=r[v]*q;surface.DrawRect(n+v*u,o+q-w,u,w)end end;function l:openUrl(d)local x="noplay noblock"if g.is3D then x=x.." 3d"end;sound.PlayURL(d,x,function(j,y,z)g:bassCallback(j,y,z)end)end;function l:openFile(A)local x="noplay noblock"if g.is3D then x=x.." 3d"end;sound.PlayFile(A,x,function(j,y,z)g:bassCallback(j,y,z)end)end;function l:bassCallback(j,y,z)if not IsValid(j)then ErrorNoHalt("[MediaLib] BassMedia play failed: ",z)return end;if g._stopped then j:Stop()return end;g.chan=j;for B,C in pairs(g.commandQueue)do C(j)end;g.commandQueue={}end;function l:runCommand(D)if IsValid(g.chan)then D(g.chan)else g.commandQueue[#g.commandQueue+1]=D end end;function l:setVolume(E)g:runCommand(function(j)j:SetVolume(E)end)end;function l:seek(F)g:runCommand(function(j)j:SetTime(F)end)end;function l:getTime()if g:isValid()then return g.chan:GetTime()end;return 0 end;function l:getState()if not g:isValid()then return"error"end;local G=g.chan:GetState()if G==GMOD_CHANNEL_PLAYING then return"playing"end;if G==GMOD_CHANNEL_PAUSED then return"paused"end;if G==GMOD_CHANNEL_STALLED then return"buffering"end;if G==GMOD_CHANNEL_STOPPED then return"paused"end;return end;function l:play()g:runCommand(function(j)j:Play()g:emit("playing")end)end;function l:pause()g:runCommand(function(j)j:Pause()g:emit("paused")end)end;function l:stop()g._stopped=true;g:runCommand(function(j)j:Stop()g:emit("destroyed")end)end;function l:isValid()return IsValid(g.chan)end
end
-- 'media'; CodeLen/MinifiedLen 485/328; Dependencies []
medialib.modulePlaceholder("media")
do
local a=medialib.module("media")a.Services={}function a.registerService(b,c)a.Services[b]=c()end;a.RegisterService=a.registerService;function a.service(b)return a.Services[b]end;a.Service=a.service;function a.guessService(d)for e,f in pairs(a.Services)do if f:isValidUrl(d)then return f end end end;a.GuessService=a.guessService
end
medialib.FolderItems["services/soundcloud.lua"] = "local a=medialib.load(\"oop\")local b=a.class(\"SoundcloudService\",\"BASSService\")local c={\"^https?://www.soundcloud.com/([A-Za-z0-9_%-]+/[A-Za-z0-9_%-]+)/?$\",\"^https?://soundcloud.com/([A-Za-z0-9_%-]+/[A-Za-z0-9_%-]+)/?$\"}function b:parseUrl(d)for e,f in pairs(c)do local g=string.match(d,f)if g then return{id=g}end end end;function b:isValidUrl(d)return h:parseUrl(d)~=nil end;function b:resolveUrl(d,i)local j=h:parseUrl(d)http.Fetch(string.format(\"https://api.soundcloud.com/resolve.json?url=http://soundcloud.com/%s&client_id=YOUR_CLIENT_ID\",j.id),function(k)local l=util.JSONToTable(k).id;i(string.format(\"https://api.soundcloud.com/tracks/%s/stream?client_id=YOUR_CLIENT_ID\",l),{})end)end;function b:query(d,i)local j=h:parseUrl(d)local m=string.format(\"http://api.soundcloud.com/resolve.json?url=http://soundcloud.com/%s&client_id=YOUR_CLIENT_ID\",j.id)http.Fetch(m,function(n,o)if o==0 then i(\"http body size = 0\")return end;local p=util.JSONToTable(n)if p.errors then local q=p.errors[1].error_message or\"error\"local r=q;if string.StartWith(q,\"404\")then r=\"Invalid id\"end;i(r)return end;i(nil,{title=p.title,duration=tonumber(p.duration)/1000})end,function(s)i(\"HTTP: \"..s)end)end;medialib.load(\"media\").registerService(\"soundcloud\",b)"
medialib.FolderItems["services/twitch.lua"] = "local a=medialib.load(\"oop\")local b=a.class(\"TwitchService\",\"HTMLService\")local c={\"https?://www.twitch.tv/([A-Za-z0-9_%-]+)\",\"https?://twitch.tv/([A-Za-z0-9_%-]+)\"}function b:parseUrl(d)for e,f in pairs(c)do local g=string.match(d,f)if g then return{id=g}end end end;function b:isValidUrl(d)return h:parseUrl(d)~=nil end;local i=\"http://wyozi.github.io/gmod-medialib/twitch.html?channel=%s\"function b:resolveUrl(d,j)local k=h:parseUrl(d)local l=string.format(i,k.id)j(l,{start=k.start})end;function b:query(d,j)local k=h:parseUrl(d)local m=string.format(\"https://api.twitch.tv/kraken/channels/%s\",k.id)http.Fetch(m,function(n,o)if o==0 then j(\"http body size = 0\")return end;local p={}p.id=k.id;local q=util.JSONToTable(n)if q then if q.error then j(q.message)return else p.title=q.display_name..\": \"..q.status end else p.title=\"ERROR\"end;j(nil,p)end,function(r)j(\"HTTP: \"..r)end)end;medialib.load(\"media\").registerService(\"twitch\",b)"
medialib.FolderItems["services/vimeo.lua"] = "local a=medialib.load(\"oop\")local b=a.class(\"VimeoService\",\"HTMLService\")local c={\"https?://www.vimeo.com/([0-9]+)\",\"https?://vimeo.com/([0-9]+)\",\"https?://www.vimeo.com/channels/staffpicks/([0-9]+)\",\"https?://vimeo.com/channels/staffpicks/([0-9]+)\"}function b:parseUrl(d)for e,f in pairs(c)do local g=string.match(d,f)if g then return{id=g}end end end;function b:isValidUrl(d)return h:parseUrl(d)~=nil end;local i=\"http://wyozi.github.io/gmod-medialib/vimeo.html?id=%s\"function b:resolveUrl(d,j)local k=h:parseUrl(d)local l=string.format(i,k.id)j(l,{start=k.start})end;function b:query(d,j)local k=h:parseUrl(d)local m=string.format(\"http://vimeo.com/api/v2/video/%s.json\",k.id)http.Fetch(m,function(n,o,p,q)if o==0 then j(\"http body size = 0\")return end;if q==404 then j(\"Invalid id\")return end;local r={}r.id=k.id;local s=util.JSONToTable(n)if s then r.title=s[1].title;r.duration=s[1].duration else r.title=\"ERROR\"end;j(nil,r)end,function(t)j(\"HTTP: \"..t)end)end;function b:hasReliablePlaybackEvents(u)return true end;medialib.load(\"media\").registerService(\"vimeo\",b)"
medialib.FolderItems["services/webaudio.lua"] = "local a=medialib.load(\"oop\")local b=a.class(\"WebAudioService\",\"BASSService\")local c={\"^https?://(.*)%.mp3\",\"^https?://(.*)%.ogg\"}function b:parseUrl(d)for e,f in pairs(c)do local g=string.match(d,f)if g then return{id=g}end end end;function b:isValidUrl(d)return h:parseUrl(d)~=nil end;function b:resolveUrl(d,i)i(d,{})end;local j=medialib.load(\"id3parser\")local k=medialib.load(\"mp3duration\")function b:query(d,i)if string.EndsWith(d,\".mp3\")and j or k then http.Fetch(d,function(l)local m,n;if j then local o=j.readtags_data(l)if o and o.title then m=o.title;if o.artist then m=o.artist..\" - \"..m end;if o.length then local p=tonumber(o.length)if p then n=p/1000 end end end end;if k then n=k.estimate_data(l)or n end;i(nil,{title=m or d:match(\"([^/]+)$\"),duration=n})end)return end;i(nil,{title=d:match(\"([^/]+)$\")})end;medialib.load(\"media\").registerService(\"webaudio\",b)"
medialib.FolderItems["services/webm.lua"] = "local a=medialib.load(\"oop\")local b=a.class(\"WebmService\",\"HTMLService\")local c={\"^https?://(.*)%.webm\"}function b:parseUrl(d)for e,f in pairs(c)do local g=string.match(d,f)if g then return{id=g}end end end;function b:isValidUrl(d)return h:parseUrl(d)~=nil end;local i=\"http://wyozi.github.io/gmod-medialib/webm.html?id=%s\"function b:resolveUrl(d,j)local k=h:parseUrl(d)local l=string.format(i,k.id)j(l,{start=k.start})end;function b:query(d,j)j(nil,{title=d:match(\"([^/]+)$\")})end;medialib.load(\"media\").registerService(\"webm\",b)"
medialib.FolderItems["services/webradio.lua"] = "local a=medialib.load(\"oop\")local b=a.class(\"WebRadioService\",\"BASSService\")local c={\"^https?://(.*)%.pls\",\"^https?://(.*)%.m3u\"}function b:parseUrl(d)for e,f in pairs(c)do local g=string.match(d,f)if g then return{id=g}end end end;function b:isValidUrl(d)return h:parseUrl(d)~=nil end;function b:resolveUrl(d,i)i(d,{})end;local j=medialib.load(\"shoutcastmeta\")function b:query(d,i)local function k()i(nil,{title=d:match(\"([^/]+)$\")})end;if j then j.fetch(d,function(l,m)if l then k()return end;i(nil,m)end)return end;k()end;medialib.load(\"media\").registerService(\"webradio\",b)"
medialib.FolderItems["services/youtube.lua"] = "local a=medialib.load(\"oop\")local b=a.class(\"YoutubeService\",\"HTMLService\")local c={\"^https?://[A-Za-z0-9%.%-]*%.?youtu%.be/([A-Za-z0-9_%-]+)\",\"^https?://[A-Za-z0-9%.%-]*%.?youtube%.com/watch%?.*v=([A-Za-z0-9_%-]+)\",\"^https?://[A-Za-z0-9%.%-]*%.?youtube%.com/v/([A-Za-z0-9_%-]+)\"}local d={}for e,f in pairs(c)do local function g(h)table.insert(d,f..h..\"t=(%d+)m(%d+)s\")table.insert(d,f..h..\"t=(%d+)s?\")end;g(\"#\")g(\"&\")g(\"?\")table.insert(d,f)end;function b:parseUrl(i)for j,k in pairs(d)do local l,m,n=string.match(i,k)if l then local o=0;if m and n then o=tonumber(m)*60+tonumber(n)else o=tonumber(m)end;return{id=l,start=o}end end end;function b:isValidUrl(i)return p:parseUrl(i)~=nil end;local q=\"http://wyozi.github.io/gmod-medialib/youtube.html?id=%s\"function b:resolveUrl(i,r)local s=p:parseUrl(i)local t=string.format(q,s.id)r(t,{start=s.start})end;local function u(v)local w=v:match(\"(%d+)H\")or 0;local x=v:match(\"(%d+)M\")or 0;local y=v:match(\"(%d+)S\")or 0;return w*60*60+x*60+y end;local z=\"AIzaSyBmQHvMSiOTrmBKJ0FFJ2LmNtc4YHyUJaQ\"function b:query(i,r)local s=p:parseUrl(i)local A=string.format(\"https://www.googleapis.com/youtube/v3/videos?part=snippet%%2CcontentDetails&id=%s&key=%s\",s.id,z)http.Fetch(A,function(B,C)if C==0 then r(\"http body size = 0\")return end;local D={}D.id=s.id;local E=util.JSONToTable(B)if E and E.items then local F=E.items[1]if not F then r(\"No video id found\")return end;D.title=F.snippet.title;D.duration=tonumber(u(F.contentDetails.duration))else r(B)return end;r(nil,D)end,function(G)r(\"HTTP: \"..G)end)end;function b:hasReliablePlaybackEvents(H)return true end;medialib.load(\"media\").registerService(\"youtube\",b)"
-- 'serviceloader'; CodeLen/MinifiedLen 311/249; Dependencies [servicebase,service_html,service_bass,oop,shoutcastmeta,media,id3parser,mp3duration]
medialib.modulePlaceholder("serviceloader")
do
medialib.load("servicebase")medialib.load("service_html")medialib.load("service_bass")for a,b in medialib.folderIterator("services")do if medialib.DEBUG then print("[MediaLib] Registering service "..b.name)end;if SERVER then b:addcs()end;b:load()end
end
-- '__loader'; CodeLen/MinifiedLen 326/78; Dependencies [mediabase,serviceloader,media]
medialib.modulePlaceholder("__loader")
do
medialib.load("mediabase")medialib.load("serviceloader")medialib.load("media")
end